<template>
    <div class="page-container page-info">
        <div class="scroll-wrap">
            <el-scrollbar class="scroll-wrap-bar">
                <div class="p-i-section">
                    <!-- 合同模板类型 -->
                    <collapse-comp>
                        <div class="type-tabs" v-show="typeActive">
                            <el-input class="type-input" size="mini" v-model="infoForm.type" placeholder="请输入合同类型" @change="getType()" clearable></el-input>
                            <el-input class="type-input" size="mini" v-model="infoForm.name" placeholder="请输入合同名称" clearable></el-input>
                            <el-button size="mini" type="primary" @click="save">保存合同</el-button>
                            <el-button size="mini" type="info" @click="back">返回</el-button>
                        </div>
                    </collapse-comp>
                    <div class="editor-container">
                        <Kindeditor v-model="infoForm.content" id="contract-template" height="100%" :minHeight="1000" :autoHeightMode="true" />
                    </div>
                </div>
            </el-scrollbar>
        </div>
    </div>
</template>
<script>
import contractApi from '@/api/contract-api'
import Kindeditor from '@/plugins/kindeditor'
export default {
    name: "contracttemplate-info",
    data() {
        return {
            typeActive: true,
            infoForm: {
                type: '',
                name: '',
                content: ''
            },
        }
    },
    components: { Kindeditor },
    methods: {
        /* 保存合同 */
        save() {
            if(!this.checkType(this.infoForm.type)){
                this.infoForm.type = ''
            }
            const { type, name, content } = this.infoForm
            if(type && name && content) {
                contractApi.save({ type, name, content }).then(res => {
                    if (res.data.success) {
                        this.$notify({
                            title: "成功",
                            message: "保存成功",
                            type: "success",
                            duration: 1000,
                        });
                        this.$router.push({name:'contracttemplate-page'})
                    } else {
                        this.$notify({
                            title: "保存失败",
                            message: res.data.msg,
                            type: "warning",
                            duration: 1000
                        });
                    }
                })
            } else {
                this.$notify({
                    title: "错误",
                    message: "模板信息不完整",
                    type: "error",
                    duration: 2000,
                });
            }
        },
        // 返回
        back(){
            this.$router.push({name:'contracttemplate-page'})
        },
        // 合同类型
        getType(){
            if(this.infoForm.type){
                if(!this.checkType(this.infoForm.type)){
                    this.$notify({
                        title: "错误",
                        message: "该类型已存在",
                        type: "error",
                        duration: 2000,
                    });
                }
            }
        },
        checkType(value){
            contractApi.checkType({type:value}).then(res => {
                return res.data.data
            }).catch( err => {
                console.log(err)
            })
        }
    }
};
</script>
<style lang="scss" scoped>
    .p-i-section {
        padding: 10px 10px;
        position: relative;
        box-sizing: border-box;
        .type-tabs {
            .type-input {
                width: 160px;
                margin-right: 5px;
            }
        }
        .editor-container {
            margin: 20px auto;
            width: 20.9cm;
            min-height: 29.7cm;
            box-shadow: 0px 0px 5px #999999;
            padding: 50px 60px;
            background-color: #fefefefe;
        }
    }
</style>