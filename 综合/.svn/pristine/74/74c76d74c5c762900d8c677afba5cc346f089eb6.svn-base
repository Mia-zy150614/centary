<template>
    <div class="pmunit-page page-container">
        <div class="page-content" v-loading="loading">
            <div class="page-content-scroll-warp">
                <el-scrollbar class="scroll-wrap">
                    <div class="pmunit-page-content clearfix">
                        <p class="p-global-title">
                            <span class="line"></span>
                            <span class="text">组织架构树</span>
                        </p>
                        <div class="content-left">
                            <el-tree
                                :data="treeData" 
                                :props="defaultProps" 
                                @node-click="handleNodeClick"
                                node-key="id"
                                default-expand-all
                                :expand-on-click-node="false"
                                :check-strictly="true"
                                class="organization-tree"
                                ref="organizationTree"
                                :default-checked-keys="activeNode"
                            >
                                <div class="organization-tree-node clearfix" slot-scope="{ node, data }">
                                    <div class="node-left">
                                        <span class="node-icon">
                                            <svg class="icon-svg" aria-hidden="true" v-if="data.deptType === null">
                                                <use xlink:href="#icon-pingtai"></use>
                                            </svg>
                                            <svg class="icon-svg" aria-hidden="true" v-if="data.deptType === 1">
                                                <use xlink:href="#icon-gongsi"></use>
                                            </svg>
                                            <svg class="icon-svg" aria-hidden="true" v-if="data.deptType === 2">
                                                <use xlink:href="#icon-bumen"></use>
                                            </svg>
                                        </span>
                                        <span class="node-text">{{ node.label }}({{data.users}})</span>
                                    </div>
                                </div>
                            </el-tree>
                        </div>
                        <div class="content-right">
                            <div class="organization-table-wrap">
                                <el-table
                                        :data="tableData"
                                        style="width: 100%"
                                        header-cell-class-name="custom-el-table-header-class"
                                        cell-class-name="custom-el-table-cell-class-name"
                                >
                                    <el-table-column align="center" type="selection"  v-model.trim="multipleSelection" width="55"></el-table-column>
                                    <el-table-column
                                            align="center"
                                            type="index"
                                            fixed
                                            :index="$indexMethod(0,searchOptions.currentPage,searchOptions.pageSize)"
                                            label="序号"
                                            width="80"
                                    ></el-table-column>
                                    <el-table-column
                                            align="center"
                                            prop="name"
                                            label="用户名"
                                            show-overflow-tooltip>
                                    </el-table-column>
                                    <el-table-column
                                            align="center"
                                            prop="locationName"
                                            label="职位"
                                            show-overflow-tooltip>
                                    </el-table-column>
                                     <el-table-column
                                            align="center"
                                            label="操作"
                                            show-overflow-tooltip>
                                     <template slot-scope="scope">
                                        <el-link  @click="roleEdit(scope.row)" :underline="false" type="warning">编辑</el-link>
                                        <el-divider direction="vertical"></el-divider>
                                        <el-link  @click="roleView(scope.row)" :underline="false" type="info">详情</el-link>
                                    </template>
                                    </el-table-column>
                                </el-table>
                                <!-- 分页器 -->
                                <div class="page-pagination">
                                    <pagination-comp @currentChange="currentChange" :currentPage="searchOptions.currentPage" :total="searchOptions.total" />
                                </div>
                            </div>
                        </div>
                    </div>
                </el-scrollbar>
            </div>
        </div>
    </div>
</template>
<script>
import deptApi from "@/api/dept-api";
import userApi from "@/api/user-api";

export default {
    name: 'pmunit-page',
    data() {
        return {
            treeData:[],
            defaultProps: {
                children: 'children',
                label: 'label'
            },
            activeNode: [], // 选中的 key
            activeNodeObj: null, // 选中的 node 数据
            tableData: [],
            loading: false,
            multipleSelection:[],
            searchOptions: {
                currentPage: 1, //当前页码
                pageSize: 20, //每页显示条数
                total: 0,
            },
        }
    },
    created() {
        this.getAllDeptTree();
        const { id } = this.$route.query
        if(id)this.getUserList(id)
    },
    methods: {
        //架构人员信息编辑
        roleEdit(row){
            this.$router.push({name: 'personnel-edit-page', query: {type: 'edit', id: row.id}})
        },
        //架构人员信息详情
        roleView(row){
            this.$router.push({name: 'personnel-view-page', query: {type: 'view', id: row.id}})
        },
        /* table 选择 */
        handleSelectionChange(rows){
            this.multipleSelection = rows;
        },
        currentChange(val) {
            this.searchOptions.currentPage = val;
            this.getList();
        },
        /* 树item点击 */
        handleNodeClick(data) {
            const { id } = data;
            if(this.activeNode[0] === id) return
            this.loading = true
            this.activeNodeObj = data
            this.getUserList(data.id);
            this.$refs.organizationTree.setCheckedKeys([id], true)
            this.$router.replace({name: 'personnel-page', query: {id}, replace: true})
        },
        //获取单位树
        getAllDeptTree() {
            deptApi.getAllDeptTree().then( res => {
                const data = res.data.data
                if(data){
                    this.treeData = data;
                }else{
                    this.treeData = [];
                }
            }).catch(err => console.warn(err));
        },
        /* 新增单位 */
        addUnit() {
            this.$router.push({name: 'pmunit-add-unit-page'})
        },
        /* 新增单位 */
        addDept() {
            this.$router.push({name: 'pmunit-add-dept-page'})
        },
        /* 编辑 */
        edit(node) {
            const { deptType, id } = node
            if(deptType === 1) {
                this.$router.push({name: 'pmunit-add-unit-page', query: { type: 'edit', id }})
            } else {
                this.$router.push({name: 'pmunit-add-dept-page', query: { type: 'edit', id }})
            }

        },
        /* 详情 */
        view(node) {
            const { deptType, id } = node
            if(deptType === 1) {
                this.$router.push({name: 'pmunit-add-unit-page', query: { type: 'view', id }})
            } else {
                this.$router.push({name: 'pmunit-add-dept-page', query: { type: 'view', id }})
            }

        },
        /* 删除 */
        doDel(node) {
            const { id,deptType } = node
            var that = this;
            var mes = deptType === 1?"单位":"部门";
            this.$confirm("确定要删除该"+mes+"？", "提示", {
                confirmButtonText: "确定",
                cancelButtonText: "取消",
                type: "warning"
            }).then(() => {
                deptApi.deleteDeptByIds({deptIds:id}).then(function (res) {
                    if (res.data.success) {
                        that.getAllDeptTree();
                        that.$notify({
                            title: "成功",
                            message: "删除成功",
                            type: "success",
                            duration: 2000
                        });
                    } else {
                        that.$notify({
                            title: "删除失败",
                            message: res.data.msg,
                            type: "warning",
                            duration: 2000
                        });
                    }
                })
                .catch(function (res) {
                    console.log(res);
                });
            }).catch(function (res) {
                console.log(res);
            });
        },
        //点击节点时获取相应人员
        getUserList(val) {
            this.activeNode[0] = val
            const params = {
                currentPage: this.searchOptions.currentPage,
                pageSize: this.searchOptions.pageSize,
                deptId: val,
            }
            userApi.getUserInfoByDeptId(params).then( res => {
                const data = res.data.data
                this.loading = false
                if (data) {
                    this.searchOptions.total =res.data.data.total;
                    this.tableData = res.data.data.list;
                }else{
                    this.tableData = [];
                }
            }).catch(err => console.warn(err));
        },

    }
}
</script>
<style lang="scss" scoped>
    .pmunit-page {
        .pmunit-page-content {
            .content-left {
                float: left;
                width: 340px;
                padding: 10px 20px;
                box-sizing: border-box;
            }
            .content-right {
                float: left;
                padding: 10px 20px;
                width: calc(100% - 340px);
                min-width: 400px;
                max-width: 900px;
                box-sizing: border-box;
                .organization-table-wrap {
                    padding-top: 15px;
                    .organization-table {
                        border-color: #eeeeee;
                        text-align: center;
                        tr, td, th {
                            border-color: #eeeeee;
                        }
                        th {
                            background-color: #f6f6f6;
                        }
                    }
                }
            }
        }
    }
    /deep/.organization-tree {
        .is-checked > .el-tree-node__content {
            background-color: $basictheme-color !important;
            color: #ffffff;
            .icon-svg {
                color: #ffffff !important;
                vertical-align: -3px;
            }
        }
        .organization-tree-node {
            width: 100%;
            .node-icon {
                margin-right: 10px;
                .icon-svg {
                    color: $basictheme-color;
                    vertical-align: -3px;
                }
            }
            .node-left {
                float: left;
            }
            .node-right {
                float: right;
                margin-right: 50px;
                .icon-wrap {
                    margin-right: 10px;
                }
            }
        }
        .el-tree-node:focus > .el-tree-node__content {
            background-color: $basictheme-color !important;
            color: #ffffff;
            .icon-svg {
                color: #ffffff !important;
            }
        }
        .el-tree-node .el-tree-node__content:hover {
            background-color: $basictheme-hover-color !important;
            color: #ffffff;
            .icon-svg {
                color: #ffffff !important;
            }
        }
    }
</style>